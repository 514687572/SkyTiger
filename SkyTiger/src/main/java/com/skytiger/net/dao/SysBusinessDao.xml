<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.skytiger.net.dao.SysBusinessDao">
  <resultMap id="BaseResultMap" type="com.skytiger.net.entity.SysBusiness">
    <result column="sysBusiness_sb_id" jdbcType="VARCHAR" property="sbId" />
    <result column="sysBusiness_sb_name" jdbcType="VARCHAR" property="sbName" />
    <result column="sysBusiness_sb_password" jdbcType="VARCHAR" property="sbPassword" />
    <result column="sysBusiness_sb_title" jdbcType="VARCHAR" property="sbTitle" />
    <result column="sysBusiness_sb_count" jdbcType="INTEGER" property="sbCount" />
    <result column="sysBusiness_sb_remark" jdbcType="VARCHAR" property="sbRemark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    sysBusiness.sb_id as sysBusiness_sb_id, sysBusiness.sb_name as sysBusiness_sb_name, 
    sysBusiness.sb_password as sysBusiness_sb_password, sysBusiness.sb_title as sysBusiness_sb_title, 
    sysBusiness.sb_count as sysBusiness_sb_count, sysBusiness.sb_remark as sysBusiness_sb_remark
  </sql>
  <select id="selectByExample" parameterType="com.skytiger.net.entity.SysBusinessExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_business sysBusiness
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="fromRowNum != null and toRowNum >= 0">
      limit #{fromRowNum}, #{toRowNum}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.skytiger.net.entity.SysBusinessExample">
    delete from sys_business sysBusiness
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.skytiger.net.entity.SysBusiness">
    insert into sys_business (sb_id, sb_name, sb_password, 
      sb_title, sb_count, sb_remark
      )
    values (#{sbId,jdbcType=VARCHAR}, #{sbName,jdbcType=VARCHAR}, #{sbPassword,jdbcType=VARCHAR}, 
      #{sbTitle,jdbcType=VARCHAR}, #{sbCount,jdbcType=INTEGER}, #{sbRemark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.skytiger.net.entity.SysBusiness">
    insert into sys_business
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sbId != null">
        sb_id,
      </if>
      <if test="sbName != null">
        sb_name,
      </if>
      <if test="sbPassword != null">
        sb_password,
      </if>
      <if test="sbTitle != null">
        sb_title,
      </if>
      <if test="sbCount != null">
        sb_count,
      </if>
      <if test="sbRemark != null">
        sb_remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sbId != null">
        #{sbId,jdbcType=VARCHAR},
      </if>
      <if test="sbName != null">
        #{sbName,jdbcType=VARCHAR},
      </if>
      <if test="sbPassword != null">
        #{sbPassword,jdbcType=VARCHAR},
      </if>
      <if test="sbTitle != null">
        #{sbTitle,jdbcType=VARCHAR},
      </if>
      <if test="sbCount != null">
        #{sbCount,jdbcType=INTEGER},
      </if>
      <if test="sbRemark != null">
        #{sbRemark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.skytiger.net.entity.SysBusinessExample" resultType="java.lang.Long">
    select count(*) from sys_business sysBusiness
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_business sysBusiness
    <set>
      <if test="record.sbId != null">
        sysBusiness.sb_id = #{record.sbId,jdbcType=VARCHAR},
      </if>
      <if test="record.sbName != null">
        sysBusiness.sb_name = #{record.sbName,jdbcType=VARCHAR},
      </if>
      <if test="record.sbPassword != null">
        sysBusiness.sb_password = #{record.sbPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.sbTitle != null">
        sysBusiness.sb_title = #{record.sbTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.sbCount != null">
        sysBusiness.sb_count = #{record.sbCount,jdbcType=INTEGER},
      </if>
      <if test="record.sbRemark != null">
        sysBusiness.sb_remark = #{record.sbRemark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_business sysBusiness
    set sysBusiness.sb_id = #{record.sbId,jdbcType=VARCHAR},
      sysBusiness.sb_name = #{record.sbName,jdbcType=VARCHAR},
      sysBusiness.sb_password = #{record.sbPassword,jdbcType=VARCHAR},
      sysBusiness.sb_title = #{record.sbTitle,jdbcType=VARCHAR},
      sysBusiness.sb_count = #{record.sbCount,jdbcType=INTEGER},
      sysBusiness.sb_remark = #{record.sbRemark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>