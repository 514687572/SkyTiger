<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.skytiger.net.dao.StUserDao">
  <resultMap id="BaseResultMap" type="com.skytiger.net.entity.StUser">
    <id column="stUser_user_id" jdbcType="VARCHAR" property="userId" />
    <result column="stUser_user_mobile" jdbcType="VARCHAR" property="userMobile" />
    <result column="stUser_user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="stUser_user_status" jdbcType="VARCHAR" property="userStatus" />
    <result column="stUser_update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="stUser_order_price" jdbcType="VARCHAR" property="orderPrice" />
    <result column="stUser_order_num" jdbcType="VARCHAR" property="orderNum" />
    <result column="stUser_task_id" jdbcType="VARCHAR" property="taskId" />
    <result column="stUser_business_id" jdbcType="INTEGER" property="businessId" />
    <result column="stUser_confirm_host" jdbcType="VARCHAR" property="confirmHost" />
    <result column="stUser_remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    stUser.user_id as stUser_user_id, stUser.user_mobile as stUser_user_mobile, stUser.user_password as stUser_user_password, 
    stUser.user_status as stUser_user_status, stUser.update_time as stUser_update_time, 
    stUser.order_price as stUser_order_price, stUser.order_num as stUser_order_num, stUser.task_id as stUser_task_id, 
    stUser.business_id as stUser_business_id, stUser.confirm_host as stUser_confirm_host, 
    stUser.remark as stUser_remark
  </sql>
  <select id="selectByExample" parameterType="com.skytiger.net.entity.StUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from st_user stUser
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="fromRowNum != null and toRowNum >= 0">
      limit #{fromRowNum}, #{toRowNum}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from st_user stUser
    where stUser.user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from st_user
    where user_id = #{userId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.skytiger.net.entity.StUserExample">
    delete from st_user stUser
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.skytiger.net.entity.StUser">
    insert into st_user (user_id, user_mobile, user_password, 
      user_status, update_time, order_price, 
      order_num, task_id, business_id, 
      confirm_host, remark)
    values (#{userId,jdbcType=VARCHAR}, #{userMobile,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, 
      #{userStatus,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{orderPrice,jdbcType=VARCHAR}, 
      #{orderNum,jdbcType=VARCHAR}, #{taskId,jdbcType=VARCHAR}, #{businessId,jdbcType=INTEGER}, 
      #{confirmHost,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.skytiger.net.entity.StUser">
    insert into st_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userMobile != null">
        user_mobile,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>
      <if test="userStatus != null">
        user_status,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="orderPrice != null">
        order_price,
      </if>
      <if test="orderNum != null">
        order_num,
      </if>
      <if test="taskId != null">
        task_id,
      </if>
      <if test="businessId != null">
        business_id,
      </if>
      <if test="confirmHost != null">
        confirm_host,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userMobile != null">
        #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null">
        #{userStatus,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderPrice != null">
        #{orderPrice,jdbcType=VARCHAR},
      </if>
      <if test="orderNum != null">
        #{orderNum,jdbcType=VARCHAR},
      </if>
      <if test="taskId != null">
        #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="businessId != null">
        #{businessId,jdbcType=INTEGER},
      </if>
      <if test="confirmHost != null">
        #{confirmHost,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.skytiger.net.entity.StUserExample" resultType="java.lang.Integer">
    select count(*) from st_user stUser
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update st_user stUser
    <set>
      <if test="record.userId != null">
        stUser.user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.userMobile != null">
        stUser.user_mobile = #{record.userMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.userPassword != null">
        stUser.user_password = #{record.userPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.userStatus != null">
        stUser.user_status = #{record.userStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        stUser.update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderPrice != null">
        stUser.order_price = #{record.orderPrice,jdbcType=VARCHAR},
      </if>
      <if test="record.orderNum != null">
        stUser.order_num = #{record.orderNum,jdbcType=VARCHAR},
      </if>
      <if test="record.taskId != null">
        stUser.task_id = #{record.taskId,jdbcType=VARCHAR},
      </if>
      <if test="record.businessId != null">
        stUser.business_id = #{record.businessId,jdbcType=INTEGER},
      </if>
      <if test="record.confirmHost != null">
        stUser.confirm_host = #{record.confirmHost,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        stUser.remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update st_user stUser
    set stUser.user_id = #{record.userId,jdbcType=VARCHAR},
      stUser.user_mobile = #{record.userMobile,jdbcType=VARCHAR},
      stUser.user_password = #{record.userPassword,jdbcType=VARCHAR},
      stUser.user_status = #{record.userStatus,jdbcType=VARCHAR},
      stUser.update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      stUser.order_price = #{record.orderPrice,jdbcType=VARCHAR},
      stUser.order_num = #{record.orderNum,jdbcType=VARCHAR},
      stUser.task_id = #{record.taskId,jdbcType=VARCHAR},
      stUser.business_id = #{record.businessId,jdbcType=INTEGER},
      stUser.confirm_host = #{record.confirmHost,jdbcType=VARCHAR},
      stUser.remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.skytiger.net.entity.StUser">
    update st_user
    <set>
      <if test="userMobile != null">
        user_mobile = #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null">
        user_status = #{userStatus,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderPrice != null">
        order_price = #{orderPrice,jdbcType=VARCHAR},
      </if>
      <if test="orderNum != null">
        order_num = #{orderNum,jdbcType=VARCHAR},
      </if>
      <if test="taskId != null">
        task_id = #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="businessId != null">
        business_id = #{businessId,jdbcType=INTEGER},
      </if>
      <if test="confirmHost != null">
        confirm_host = #{confirmHost,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.skytiger.net.entity.StUser">
    update st_user
    set user_mobile = #{userMobile,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_status = #{userStatus,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      order_price = #{orderPrice,jdbcType=VARCHAR},
      order_num = #{orderNum,jdbcType=VARCHAR},
      task_id = #{taskId,jdbcType=VARCHAR},
      business_id = #{businessId,jdbcType=INTEGER},
      confirm_host = #{confirmHost,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
</mapper>